name: CI/CD Pipeline

on:
  workflow_dispatch
  #push:
   # branches: [ main]
  #pull_request:
   # branches: [ main]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4      
    - name: Install dependencies
      run: |
        npm install -g html-validate
        npm install -g stylelint stylelint-config-standard

        
    - name: Validate HTML
      run: |
        html-validate index.html

    - name: Validate CSS syntax
      run: |
        for file in $(find . -name "*.css"); do
          echo "Linting $file"
          npx stylelint "$file" || exit 1
        done

      
    
        
    - name: Test Docker build
      run: |
        docker build -t kandeel-website:test .
        docker run --rm -d --name test-container -p 8080:82 kandeel-website:test
        sleep 5
        curl -f http://localhost:8080 || exit 1
        docker stop test-container
      

  build-and-push:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
        
    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ secrets.DOCKER_USERNAME }}/kandeel-website
        tags: |
          type=ref,event=branch
          type=sha,prefix={{branch}}-
          type=raw,value=latest,enable={{is_default_branch}}
          
    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        platforms: linux/amd64,linux/arm64
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    
    steps:
    - name: Deploy to production
      run: |
        echo "ðŸš€ Deployment would happen here"
        echo "You can add your deployment steps like:"
        echo "- Deploy to cloud provider (AWS, GCP, Azure)"
        echo "- Update Kubernetes manifests"
        echo "- Trigger webhook to your server"
        echo "- Use services like Vercel, Netlify, or GitHub Pages"
